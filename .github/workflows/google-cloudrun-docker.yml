name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  REGION: "${{ secrets.REGION }}"
  SERVICE: "${{ secrets.SERVICE_NAME }}"

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'

    steps:
      # Paso 1: Checkout del código
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      # Paso 2: Autenticarse con la cuenta de servicio de Google Cloud
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Paso 3: Autenticación de Docker para el registro de imágenes en Google Artifact Registry
      - name: 'Docker Auth'
        run: |
          echo ${{ secrets.GCP_SA_KEY }} > gcloud-service-key.json
          gcloud auth activate-service-account --key-file=gcloud-service-key.json
          gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      # Paso 4: Construir y subir la imagen Docker
      - name: 'Build and Push Container'
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Paso 5: Desplegar la imagen a Cloud Run
      - name: 'Deploy to Cloud Run'
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'

      # Paso 6: Mostrar la URL del servicio desplegado
      - name: 'Show output'
        run: |
          echo "Deployed URL: ${{ steps.deploy.outputs.url }}"
